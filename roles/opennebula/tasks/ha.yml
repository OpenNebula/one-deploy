---
- name: Get Zone 0
  ansible.builtin.shell:
    cmd: onezone show 0 --json
    executable: /bin/bash
  register: shell
  changed_when: false
  ignore_errors: true

- name: Detect or select a Leader
  run_once: true
  ansible.builtin.set_fact:
    leader: >-
      {{ groups.frontend[0] if _running is falsy else _leader }}
    oned_no_restart: >-
      {{ groups.frontend
         if _running is falsy else
         groups.frontend | difference(_peer_names) }}
  vars:
    _results: >-
      {{ groups.frontend | map('extract', hostvars, ['shell']) | list }}
    _running: >-
      {{ _results | selectattr('failed', 'false') | list }}
    _documents: >-
      {{ _running | map(attribute='stdout') | map('from_json') | list }}
    _server_pools: >-
      {{ _documents | map(attribute='ZONE.SERVER_POOL') | select | list }}
    _peers: >-
      {{ [_server_pools[0].SERVER] | flatten | list }}
    _peer_names: >-
      {{ _peers | map(attribute='NAME') | list }}
    _leader: >-
      {{ (_peers | selectattr('STATE', '==', '3') | first).NAME }}

- ansible.builtin.include_tasks: "{{ role_path }}/tasks/join.yml"
  when: inventory_hostname == leader

- ansible.builtin.include_tasks: "{{ role_path }}/tasks/sync.yml"
  when: inventory_hostname != leader

# NOTE: We emulate here `serial: 1` using `loop:` + `delegate_to:` as HA Frontends
# *MUST* be joined strictly sequentially.
- ansible.builtin.include_tasks: "{{ role_path }}/tasks/join.yml"
  args:
    apply:
      delegate_to: "{{ follower }}"
  loop: "{{ _followers }}"
  loop_control: { loop_var: follower }
  vars:
    _followers: >-
      {{ groups.frontend | difference([leader]) }}
  when: inventory_hostname == leader

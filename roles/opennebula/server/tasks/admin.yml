---
- vars:
    # NOTE: The _admin_pubkey_loaded is used inside the admin_pubkey var / default.
    # That way it can be overridden or disabled with `admin_pubkey: null` or it takes
    # the value of existing public key from the Leader when left alone.
    _admin_pubkey_loaded: >-
      {{ slurp_admin_pubkey.content | d('') | b64decode | trim }}
  when:
    - admin_pubkey != None # ignore if `admin_pubkey: null`
    - federation.role != 'SLAVE'
    - inventory_hostname == leader # instead of `run_once: true`
  block:
    - name: Slurp oneadmin's public key from the Leader
      ansible.builtin.slurp:
        path: /var/lib/one/.ssh/id_rsa.pub
      register: slurp_admin_pubkey

    - name: Get oneadmin's user template
      ansible.builtin.shell:
        cmd: oneuser show oneadmin --json
        executable: /bin/bash
      register: shell
      changed_when: false

    - name: Update oneadmin's user template
      ansible.builtin.shell:
        cmd: |
          set +o errexit
          TEMPLATE="$(mktemp)"
          tee "$TEMPLATE"
          cat "$TEMPLATE" | oneuser update oneadmin "$TEMPLATE"; RC="$?"
          rm -f "$TEMPLATE"
          exit "$RC"
        stdin: |
          {{ _combined | opennebula.deploy.to_one }}
        executable: /bin/bash
      when: _combined | opennebula.deploy.to_one
            !=
            _template | opennebula.deploy.to_one
      vars:
        _document: >-
          {{ shell.stdout | from_json }}
        _template: >-
          {{ _document.USER.TEMPLATE }}
        _update:
          SSH_PUBLIC_KEY: >-
            {{ admin_pubkey | d('')
                            | split(_newline)
                            | map('trim')
                            | select
                            | unique
                            | join(_newline) }}
        _combined: >-
          {{ _template | combine(_update, recursive=true) }}
        # Helper vars.
        _newline: "\n"

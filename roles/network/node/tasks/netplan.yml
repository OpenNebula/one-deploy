---
- name: Get Netplan config
  ansible.builtin.shell:
    cmd: netplan get all
    executable: /bin/bash
  changed_when: false
  register: shell

- name: Parse Netplan config
  ansible.builtin.set_fact:
    phydev_cfg: >-
      {%- set output = [] -%}
      {%- for type, devices in _network.items() -%}
        {%- if devices is mapping -%}
          {%- for device, config in devices.items() -%}
            {{- output.append([device, {"type": type, "config": config}]) -}}
          {%- endfor -%}
        {%- endif -%}
      {%- endfor -%}
      {{- dict(output) -}}
  vars:
    # NOTE: If you don't use netplan, then the automatic IP address "move" will be skipped.
    _network: >-
      {{ (shell.stdout | from_yaml).network | d({}) }}

- name: Decide if bridge should be created
  ansible.builtin.set_fact:
    should_create_bridge: >-
      {{ phydev_cfg[_phydev] is defined
         and
         phydev_cfg[_bridge] is undefined }}

- when: should_create_bridge is true
  block:
    - name: Use Netplan CLI to reconfigure networking
      ansible.builtin.shell:
        cmd: |
          set -o errexit

          {% for key, value in _update.items() %}
          netplan set 'bridges.{{ _bridge }}.{{ key }}={{ value | to_json }}'
          {% endfor %}
          netplan set 'bridges.{{ _bridge }}.interfaces=["{{ _phydev }}"]'

          {% for key, value in _cleanup.items() %}
          netplan set '{{ phydev_cfg[_phydev].type }}.{{ _phydev }}.{{ key }}={{ value | to_json }}'
          {% endfor %}

          netplan apply
        executable: /bin/bash
      vars:
        _update: >-
          {{ phydev_cfg[_phydev].config | dict2items
                                        | selectattr('key', 'in', _cleanup.keys())
                                        | items2dict }}
        _cleanup:
          dhcp4: false
          dhcp6: false
          addresses: null
          gateway4: null
          gateway6: null
          nameservers: null
          macaddress: null
          mtu: null
          routes: null
          routing-policy: null

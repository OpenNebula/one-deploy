---
#### RISK: I MUST assume GRUB is the bootloader being used.

# Developer note: Looking for line 'DMAR: IOMMU enabled' actually only verifies the presence of 'intel_iommu=on' as a kernel command line parameter.
#                 If VT-d is not enabled in the BIOS, the line will still apear but won't mean anything.
- name: Check if passthrough is enabled in CPU and IOMMU groups are present
  ansible.builtin.shell:
  args:
    cmd: "set -o pipefail && dmesg | grep -cE \"{{ _iommu_dmesg_pattern }}\""
    executable: /bin/bash
  register: passthrough_iommu_enabled
  changed_when: false
  failed_when: false
  vars:
    _iommu_dmesg_pattern: >-
      {{ 'Intel\(R\) Virtualization Technology for Directed I/O' if passthrough_cpu_vendor_id == 'GenuineIntel' else
         'AMD-Vi: Virtual APIC enabled' if passthrough_cpu_vendor_id == 'AuthenticAMD' else '' }}

# Developer note: The check is expected to never apply in AMD CPUs, but just for completion
- name: Enable IOMMU in the nodes where necessary
# - name: Generate GRUB config override file
  when: not (passthrough_iommu_enabled.stdout | bool)
  ansible.builtin.copy:
    dest: "/etc/default/grub.d/iommu_enable.cfg"
    owner: "root"
    group: "root"
    mode: "0600"
    content: "{{ _file_content }}"
  notify:
    - Update GRUB
    - Reboot Machine
  vars:
    _file_content: >-
      {{ 'GRUB_CMDLINE_LINUX_DEFAULT="$GRUB_CMDLINE_LINUX_DEFAULT intel_iommu=on"'
          if passthrough_cpu_vendor_id == 'GenuineIntel' else
          'GRUB_CMDLINE_LINUX_DEFAULT="$GRUB_CMDLINE_LINUX_DEFAULT amd_iommu=on"'
          if passthrough_cpu_vendor_id == 'AuthenticAMD' else '' }}

- name: Set IOMMU default domain type to passthrough
  when: passthrough_iommu_pt | bool
  ansible.builtin.copy:
    dest: "/etc/default/grub.d/iommu_type.cfg"
    owner: "root"
    group: "root"
    mode: "0600"
    content: >-
      {{ 'GRUB_CMDLINE_LINUX_DEFAULT="$GRUB_CMDLINE_LINUX_DEFAULT iommu=pt"' }}
  notify:
    - Update GRUB
    - Reboot Machine


- name: Flush handlers
  ansible.builtin.meta: flush_handlers


- name: Check again if IOMMU is enabled
  ansible.builtin.shell:
  args:
    cmd: "set -o pipefail && dmesg | grep -cE \"{{ _iommu_dmesg_pattern }}\""
    executable: /bin/bash
  register: passthrough_iommu_enabled
  changed_when: false
  failed_when: false
  vars:
    _iommu_dmesg_pattern: >-
      {{ 'Intel\(R\) Virtualization Technology for Directed I/O' if passthrough_cpu_vendor_id == 'GenuineIntel' else
         'AMD-Vi: Virtual APIC enabled' if passthrough_cpu_vendor_id == 'AuthenticAMD' else '' }}

- name: Assert that passthrough/IOMMU is succesfully enabled in all hosts
  ansible.builtin.assert:
    that: "{{ passthrough_iommu_enabled.stdout | bool }}"
    fail_msg: |
      Passthrough requirements not met.
      Please ensure that your CPU supports IOMMU, and that VT-d or AMD-Vi is enabled from BIOS/UEFI.

- name: Create custom udev rule for vfio-pci in all hosts
  ansible.builtin.copy:
    dest: "/etc/udev/rules.d/opennebula-vfio.rules"
    owner: root
    group: root
    mode: '0644'
    content: >-
      SUBSYSTEM=="vfio", GROUP="kvm", OWNER="oneadmin"
  notify:
    - Reload udev rules

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

---
- name: Install OpenNebula KVM packages
  ansible.builtin.package:
    name: "{{ _common + _specific[ansible_os_family] }}"
  vars:
    _common: [opennebula-node-kvm]
    _specific:
      Debian: []
      RedHat: []
  register: package
  until: package is success
  retries: 12
  delay: 5
  tags: [preinstall]

- ansible.builtin.import_tasks:
    file: "{{ role_path }}/tasks/libvirt.yml"
  tags: [libvirt]

- ansible.builtin.include_role:
    name: opennebula/leader
  when: leader is undefined

- name: Slurp oneadmin's pubkey
  ansible.builtin.slurp:
    path: /var/lib/one/.ssh/id_rsa.pub
  register: slurp
  run_once: true
  delegate_to: "{{ leader }}"

- name: Add oneadmin's pubkey to authorized keys
  ansible.posix.authorized_key:
    user: oneadmin
    key: "{{ slurp.content | b64decode }}"

- delegate_to: "{{ leader }}"
  block:
    - name: Get Nodes
      ansible.builtin.shell:
        cmd: onehost list --json
        executable: /bin/bash
      register: shell
      changed_when: false
      run_once: true

    - name: Add this KVM Node to OpenNebula
      ansible.builtin.shell:
        cmd: onehost create '{{ _this }}' -i '{{ hv_types[_hv].im_mad }}' -v '{{ hv_types[_hv].vmm_mad }}'
        executable: /bin/bash
      when: _host_pool is falsy or _this not in _node_names
      vars:
        _document: >-
          {{ shell.stdout | from_json }}
        _host_pool: >-
          {{ _document.HOST_POOL }}
        _node_names: >-
          {{ [_host_pool.HOST] | flatten | map(attribute='NAME') | list }}
        _this: >-
          {{ ansible_host | d(inventory_hostname) }}
        _hv: >-
          {{ node_hv | lower }}

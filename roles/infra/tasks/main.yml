---
- name: Purge cloud-init from system
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/cloud-init.yml"

- name: Install required OS packages
  ansible.builtin.package:
    name: "{{ _common + _specific[ansible_os_family] }}"
  vars:
    _common: [acl, genisoimage, python3-libvirt, python3-lxml. libvirt-clients, libvirt-daemon-system, qemu-kvm, bridge-utils]
    _specific:
      Debian: [qemu-utils]
      RedHat: [qemu-img]
  register: package
  until: package is success
  retries: 12
  delay: 5

- name: List defined VMs
  community.libvirt.virt:
    command: list_vms
  register: defined_vms

- name: Detect Front-end / Infra-VM mappings
  ansible.builtin.set_fact:
    infra_to_frontends: "{{ _infra_to_frontends }}"
  vars:
    # Reversed mapping from an Infra-VM to a list of Front-ends.
    _infra_to_frontends: >-
      {{ dict(_keys | zip(_values)) }}
    _keys: >-
      {{ _grouped | map(attribute=0) }}
    _values: >-
      {{ _grouped | map(attribute=1) | map('map', attribute='key') }}
    _grouped: >-
      {{ _frontends_to_infra | dict2items | groupby('value') }}
    # Simple mapping from a Front-end to an Infra-VM.
    _frontends_to_infra: >-
      {{ dict(_frontends | zip(_frontends | map('extract', hostvars, ['infra_hostname']))) }}
    # NOTE: We deliberately remove existing (defined) VMs as we don't touch them ever again (unless undefined)!
    _frontends: >-
      {{ groups[_frontend_group] | reject('in', defined_vms.list_vms) }}
    _frontend_group: >-
      {{ frontend_group | d('frontend') }}

- ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/deploy.yml"
  when:
    - infra_to_frontends[inventory_hostname] is defined
    - infra_to_frontends[inventory_hostname] is truthy

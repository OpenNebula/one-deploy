---
- tags: [preinstall]
  block:
    - ansible.builtin.include_role:
        name: repository
      vars:
        repos_enabled: [grafana, opennebula]
      when: grafana_repo is undefined or opennebula_repo is undefined

    - name: Install Grafana with dependencies
      ansible.builtin.package:
        name: "{{ _common + _specific[ansible_os_family] }}"
      vars:
        _common: [bash, grafana, opennebula-prometheus]
        _specific:
          Debian: []
          RedHat: []
      register: package
      until: package is success
      retries: 12
      delay: 5

- ansible.builtin.include_role:
    name: opennebula/leader
  when: leader is undefined

- name: Provision Grafana datasources
  ansible.builtin.copy:
    dest: /etc/grafana/provisioning/datasources/prometheus.yml
    mode: u=rw,go=r
    content: |
      apiVersion: 1
      datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        url: "http://{{ one_vip | default(leader) }}:9090"
        isDefault: true
        editable: false
  register: copy_datasources

- name: Provision Grafana dashboards
  ansible.builtin.copy:
    dest: /etc/grafana/provisioning/dashboards/opennebula.yml
    mode: u=rw,go=r
    content: |
      apiVersion: 1
      providers:
      - name: opennebula
        type: file
        folder: ONE
        options: { path: /usr/share/one/grafana/dashboards/ }
  register: copy_dashboards

- name: Enable / Start / Restart Grafana service (NOW)
  ansible.builtin.service:
    name: grafana-server
    enabled: true
    state: >-
      {{ 'restarted' if _changed else 'started' }}
  vars:
    _changed: >-
      {{ (copy_datasources is changed) or (copy_dashboards is changed) }}

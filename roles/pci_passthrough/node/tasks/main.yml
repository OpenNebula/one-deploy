---
- name: "Handle vfio devices ownership"
  when: pci_passthrough_enabled | default(false)
  block:
    - name: Create vfio udev rule
      ansible.builtin.copy:
        dest: /etc/udev/rules.d/99-vfio.rules
        content: 'SUBSYSTEM=="vfio", GROUP="kvm", MODE="0666"'
        owner: root
        group: root
        mode: '0644'

    - name: Reload udev rules
      ansible.builtin.command: udevadm control --reload-rules
      become: true
      register: reload_result
      changed_when: false

    - name: Ensure reload was successful
      ansible.builtin.assert:
        that:
          - reload_result.rc == 0
        fail_msg: "Handle vfio devices ownership: 'udevadm control --reload-rules' failed"

    - name: Trigger udev events
      ansible.builtin.command: udevadm trigger
      become: true
      register: trigger_result
      changed_when: false

    - name: Ensure trigger was successful
      ansible.builtin.assert:
        that:
          - trigger_result.rc == 0
        fail_msg: "Handle vfio devices ownership: 'udevadm trigger' failed"

- name: "Manage PCI passthrough devices"
  when: pci_passthrough_enabled | default(false)
  block:
    - name: "Install driverctl"
      ansible.builtin.package:
        name: driverctl
        state: present
      become: true

    - name: "Manage individual PCI devices"
      ansible.builtin.include_tasks: pci_device.yml
      loop: "{{ pci_devices | default([]) }}"
      loop_control:
        loop_var: pci_device

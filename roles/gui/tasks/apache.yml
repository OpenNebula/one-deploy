---
- tags: [preinstall]
  block:
    - name: Install Apache2
      ansible.builtin.package:
        name: "{{ _common + _specific[ansible_os_family] }}"
      vars:
        _common: []
        _specific:
          Debian: [apache2]
          RedHat: [httpd, mod_ssl]
      register: package
      until: package is success
      retries: 12
      delay: 5

    # NOTE: All modules specified below are not enabled automatically
    #       in Debian-like distros.
    - name: Enable Apache2 modules
      ansible.builtin.command:
        cmd: a2enmod '{{ item }}'
        creates: "/etc/apache2/mods-enabled/{{ item }}.load"
      loop: [headers, proxy, proxy_http, proxy_wstunnel, rewrite, ssl]
      notify:
        - Restart FireEdge Server
      when: ansible_os_family == 'Debian'

- vars:
    _destdir:
      Debian: /etc/apache2/sites-available
      RedHat: /etc/httpd/conf.d
    _loop:
      - name: opennebula-ssl
        when: >-
          {{ (ssl.key is defined and ssl.key is truthy)
             and
             (ssl.certchain is defined and ssl.certchain is truthy) }}
  block:
    - name: Configure OpenNebula VHOSTs (Apache2)
      ansible.builtin.template:
        dest: "{{ _destdir[ansible_os_family] }}/{{ item.name }}.conf"
        src: "{{ role_path }}/templates/{{ item.name }}.conf.j2"
        mode: u=rw,go=r
      when:
        - item.when is true
      loop: "{{ _loop }}"
      notify:
        - Reload Apache2

    - name: Enable OpenNebula VHOSTs (Apache2)
      ansible.builtin.command:
        cmd: a2ensite '{{ item.name }}'
        creates: "/etc/apache2/sites-enabled/{{ item.name }}.conf"
      when:
        - item.when is true
        - ansible_os_family == 'Debian'
      loop: "{{ _loop }}"
      notify:
        - Reload Apache2

- name: Enable Apache2 Server
  ansible.builtin.service:
    name: "{{ _name[ansible_os_family] }}"
    enabled: true
  vars:
    _name: { Debian: apache2, RedHat: httpd }

- name: Start Apache2 Server
  ansible.builtin.service:
    name: "{{ _name[ansible_os_family] }}"
    state: started
  vars:
    _name: { Debian: apache2, RedHat: httpd }

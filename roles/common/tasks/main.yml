---
- name: Compute facts
  ansible.builtin.set_fact:
    features: >-
      {{ features_defaults | combine(features | d({})) }}
    federation:
      # Decide what role should this Front-end perform.
      role: >-
        {{ 'MASTER'
           if _force_master else
           'SLAVE'
           if (groups[_federation_group] is defined) else
           'STANDALONE' }}
      # Pre-compute core cluster groups (to reduce complexity later).
      groups:
        all: >-
          {{ (groups[_frontend_group] + groups[_node_group]) | unique }}
        frontend: >-
          {{ groups[_frontend_group] }}
        node: >-
          {{ groups[_node_group] }}
      # Points to the leader of the master Front-end.
      master_host: >-
        {{ hostvars[_master].ansible_host }}
      master_user: >-
        {{ hostvars[_master].ansible_user }}
      master: master # inventory name
  vars:
    _master: >-
      {{ groups[_federation_group] | d(groups[_frontend_group]) | first }}
    _frontend_group: >-
      {{ frontend_group | d('frontend') }}
    _node_group: >-
      {{ node_group | d('node') }}
    _federation_group: >-
      {{ federation_group | d('federation') }}
    _force_master: >-
      {{ (force_master is defined) and (force_master | bool is true) }}

- name: Dynamically add ungrouped inventory host to represent the Master
  ansible.builtin.add_host:
    name: master
    ansible_host: "{{ federation.master_host }}"
    ansible_user: "{{ federation.master_user }}"
  changed_when: false
  when:
    - federation.role != 'STANDALONE'
    - hostvars.master is undefined

- name: Compute facts (Ceph)
  ansible.builtin.set_fact:
    ceph: >-
      {{ ceph_defaults | combine(ceph | d({})) }}
  when: features.ceph | bool is true

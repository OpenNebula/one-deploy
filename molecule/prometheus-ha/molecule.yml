---
prerun: false

dependency:
  name: galaxy
  enabled: false

provisioner:
  name: ansible
  env:
    ANSIBLE_COLLECTIONS_PATHS: ../../
    ANSIBLE_COLLECTIONS_PATH:  ../../
  inventory:
    group_vars:
      all:
        env_name: prometheus-ha
        ansible_user: root
        ensure_keys_for: [root]
        ensure_hostname: true
        ensure_hosts: true
        one_pass: opennebula
        one_version: '6.8'
        one_token: ${ONE_TOKEN}
        features: { prometheus: true }
        one_vip: "{{ '${ONE_RANGE3}'.split()[0] | ansible.utils.ipmath('${ONE_RANGE3}'.split()[1]|int - 1) }}"
        one_vip_cidr: "{{ '${ONE_SUBNET}' | ansible.utils.ipaddr('prefix') }}"
        one_vip_if: eth0
        ds: { mode: ssh }
        vn:
          service:
            managed: true
            template:
              VN_MAD: bridge
              PHYDEV: eth0
              BRIDGE: br0
              AR:
                TYPE: IP4
                IP: "{{ '${ONE_RANGE3}'.split()[0] }}"
                SIZE: "{{ '${ONE_RANGE3}'.split()[1] }}"
              NETWORK_ADDRESS: "{{ '${ONE_SUBNET}' | ansible.utils.nthhost(0) }}"
              NETWORK_MASK: "{{ '${ONE_SUBNET}' | ansible.utils.ipaddr('netmask') }}"
              GATEWAY: "{{ '${ONE_SUBNET}' | ansible.utils.nthhost(1) }}"
              DNS: 1.1.1.1 8.8.8.8
  config_options:
    defaults:
      gathering: explicit
      host_key_checking: false
      display_skipped_hosts: true
      retry_files_enabled: false
      any_errors_fatal: true
      callbacks_enabled: profile_tasks
      stdout_callback: yaml
    privilege_escalation:
      become: true
      become_user: root
    ssh_connection:
      pipelining: true
      ssh_args: -q -o ControlMaster=auto -o ControlPersist=60s

platforms:
  - name: prometheus-ha-f1
    groups: [frontend, node, grafana]
    template:
      name: ubuntu2204
      content: &content
        MEMORY: 3072
        NIC:
          NETWORK: ${ONE_VNET}
    auth: &auth
      host: ${ONE_HOST}
      user: ${ONE_USER}
      pswd: ${ONE_PSWD}

  - name: prometheus-ha-f2
    groups: [frontend, node]
    template:
      name: alma9
      content: *content
    auth: *auth

  - name: prometheus-ha-f3
    groups: [frontend, node]
    template:
      name: ubuntu2004
      content: *content
    auth: *auth

  - name: prometheus-ha-f4
    groups: [frontend, node]
    template:
      name: alma8
      content: *content
    auth: *auth
